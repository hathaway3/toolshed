*
* Process system calls
*
* use ../../defs/os9defs.a
 psect process_a,0,0,2,0,0

* tjl  07/28/2005  Moved file to version 2 C ABI.

* kill(pid,signal)
*kill: lda 3,s get process id
kill: tfr b,a get process id
*ldb 5,s get signal number
 ldb 3,s get signal number
 os9 F$Send
 clra
 lbra _sysret

* wait(int *status)
*wait: clra clear these so
wait: pshs d
 clra clear these so
 clrb signal can be detected
 os9 F$Wait
 lbcs _os9err

*ldx 2,s
 ldx ,s++
 beq wait10
 stb 1,x
 clr ,x

wait10 tfr a,b
 clra
 rts

* setpr(pid,priority)
*setpr: lda 3,s get process id
setpr: tfr b,a get process id
* ldb 5,s get priority
 ldb 3,s get priority
 os9 F$SPrior call os9
 lbra _sysret

* chain(modname,paramsize,paramp,type,language,datasize)
*
* This function can never return to the caller. The stack pointer
* must be adjusted to point into the direct page which, in general,
* contains global variables belonging to the program. OS-9 will
* therefore overwrite these values making the state of the program
* undefined after the call.
* In addition, we cannot report the error here because the module
* name string could easily be in the direct page.
chain:
 leau 0,s save the sp
 leas $ff,y set the stack into the direct page

*ldx 2,u get the module name pointer
 tfr d,x get the module name pointer
*ldy 4,u get the parameter area size
 ldy 2,u get the parameter area size
*lda 9,u get the type
 lda 7,u get the type
 lsla
 lsla
 lsla
 lsla
*ora 11,u and the language
 ora 9,u and the language
*ldb 13,u get the data size
 ldb 11,u get the data size
*ldu 6,u get the parameter area beginning address
 ldu 4,u get the parameter area beginning address

 os9 F$Chain go do it

* return here indicates an error
 os9 F$Exit error code already in b reg.

* os9fork(modname,paramsize,paramp,language,type,datasize)
os9fork: pshs y,u save environment

*ldx 6,s get module name
 tfr d,x get module name
*ldy 8,s get parameter area size
 ldy 6,s get parameter area size
*ldu 10,s get parameter area pointer
 ldu 8,s get parameter area pointer
*lda 13,s get language
 lda 11,s get language
*ora 15,s and type
 ora 13,s and type
*ldb 17,s get data size
 ldb 15,s get data size

 os9 F$Fork call os9

* return here indicates either error or parent
 puls y,u restore environment
 lbcs _os9err
 tfr a,b make an integer out of it
 clra
* NOTE: the x register return value (points past name) is ignored
 rts
 endsect
